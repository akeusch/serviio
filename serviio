#!/bin/sh
#
# serviio       Serviio Startup Script
#
# chkconfig:   35 86 14
# description:  Simple script to start Serviio

# by Arthur Keusch arthur.keusch@bluemail.ch
# Since at least Serviiio 1.2 we need a home diretory to store java temp. files
# /usr/local/serviio must have serviio as owner and group
# added var java_path seems serviio 1.3 need it
#
# Source function library.
. /etc/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# enable debug
#set -x
exec="/usr/local/serviio/bin/serviio.sh"
prog="serviio"
user="serviio"
home_dir="/home/$user"
count=0
ffmpeg_path="/usr/bin"
#ffmpeg_path="/usr/local/bin"
#ffmpeg_path="/home/bin"
#java_path="/usr/bin"
java_path="/opt/jdk1.8.0_45"

lockfile=/var/lock/subsys/$prog
pidfile=/var/run/$prog.pid


start() {
    [ -d $home_dir ] || exit 5
    [ -x $exec ] || exit 5
    echo -n "Starting Serviio media server: "
# if not running, start it up here, usually something like "daemon $exec"
#    export PATH=$PATH:/usr/bin:/usr/local/bin
    export PATH=$PATH:$ffmpeg_path:/usr/bin
#    export PATH=$PATH:/usr/bin:$ffmpeg_path:$java_path
    #daemon --user $user $exec  > /dev/null 2>1 &
    daemonize -u $user $exec  > /dev/null 2>1 &
#    daemonize -u $user $exec  &
#    $exec  > /dev/null 2>1 &


    # Wait until serviio runs as user serviio

    while [ $count -lt 5 ]
    do
    #PROC=$(ps -fu $user |grep $exec |head -n1| awk '{print $2}')
    PROC_RUN=$(ps -fu serviio | awk '{print $9}' |grep Xmx512M)

      if [ "$PROC_RUN" = "-Xmx512M" ] ; then

      PROC=$(ps -fu serviio | grep Xmx512M |  awk '{print $2}')
        RETVALT=0
        touch $lockfile && echo -e '\033[58G' '\033[0;39m' "[" '\033[0;32m'  "OK" '\033[0;39m' "]"
        echo $PROC > $pidfile
        break
      else
        count=`expr $count + 1 `
        sleep 5
        RETVALT=1
      fi
    done

    if  [ "$RETVALT" -ne "0" ] ; then
      echo -e '\033[58G' '\033[0;39m' "[" '\033[0;31m'  "FAIL" '\033[0;39m' "]"
    fi
    return $RETVALT
}

stop() {
    echo -n "Stopping Serviio media server: "
    $exec -stop > /dev/null 2>1 &
    sleep 6
    PROC=$(ps -fu $user |grep $exec |head -n1| awk '{print $2}')
      if [ "$PROC" = "" ] ; then
       RETVALT=0
       rm -f $lockfile && rm -f $pidfile && echo -e '\033[58G' '\033[0;39m' "[" '\033[0;32m'  "OK" '\033[0;39m' "]"
      else
       RETVALT=1
       echo -e '\033[58G' '\033[0;39m' "[" '\033[0;31m'  "FAIL" '\033[0;39m' "]"
      fi
    return $RETVALT
}

restart() {
    stop
    sleep 2
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
#        rh_status_q && exit 0
        $1
        ;;
    stop)
#        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
#        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
